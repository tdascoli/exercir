{"version":3,"sources":["exercir.js"],"names":["phases","Map","id","name","topics","passspiel","ballmitnahme","ballkontakt","unterdruck","torschuss","dribbling","kopfball","1vs1","spielaufbau","abschluss","toreverhindern","ballerobern","umschalten","ausdauer","schnelligkeit","koordination","orientierung","File","this","fileData","ko","observable","file","binaryString","text","dataURL","arrayBuffer","base64String","fileTypes","onInvalidFileDrop","fileArray","observableArray","base64StringArray","subscribe","console","log","Variety","description","image","Topic","self","selectedTopicIds","selectedTopics","computed","utils","arrayMap","index","split","main","get","Phase","selectedPhasesIds","selectedPhases","Exercise","phase","topic","title","organisation","procedure","coaching","isExtended","varieties","hasVarieties","length","addVariety","push","ExercirViewModel","exercise","Array","from","values","keys","forEach","value","tpcs","map","key","Object","save","fileBindings","defaultOptions","wrapperClass","fileNameClass","noFileText","buttonGroupClass","buttonClass","clearButtonClass","buttonText","changeButtonText","clearButtonText","fileName","clearButton","onClear","options","clear","applyBindings"],"mappings":"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","file":"exercir.js","sourcesContent":["var phases = new Map([\r\n  [\"phase1\",{\"id\":\"phase1\",\"name\":\"Wir haben den Ball\"}],\r\n  [\"phase2\",{\"id\":\"phase2\",\"name\":\"Wir verlieren den Ball\"}],\r\n  [\"phase3\",{\"id\":\"phase3\",\"name\":\"Wir haben den Ball nicht\"}],\r\n  [\"phase4\",{\"id\":\"phase4\",\"name\":\"Wir erobern den Ball\"}]]);\r\n\r\nvar topics = new Map([\r\n\t[\"TE\", [\r\n\t\t\t{ \"passspiel\" : \"Passspiel\"},\r\n\t\t\t{ \"ballmitnahme\" : \"Ballmitnahme\"},\r\n\t\t\t{ \"ballkontakt\" : \"1. Ballkontakt\"},\r\n\t\t\t{ \"unterdruck\" : \"Unter Druck\"},\r\n\t\t\t{ \"torschuss\" : \"Torschuss, Abschluss\"},\r\n\t\t\t{ \"dribbling\" : \"Dribbling, Finte\"},\r\n\t\t\t{ \"kopfball\" : \"Kopfball\"}\r\n\t\t]],\r\n\t[\"TA\", [\r\n\t\t  { \"1vs1\" : \"1:1\"},\r\n\t\t\t{ \"spielaufbau\" : \"Spielaufbau\"},\r\n\t\t\t{ \"abschluss\" : \"Abschluss\"},\r\n\t\t\t{ \"toreverhindern\" : \"Tore verhindern\"},\r\n\t\t\t{ \"ballerobern\" : \"Ball erobern\"},\r\n\t\t\t{ \"umschalten\" : \"Umschalten\"}\r\n\t\t]],\r\n\t[\"KO\", [\r\n\t\t\t{ \"ausdauer\" : \"Ausdauer\"},\r\n\t\t\t{ \"schnelligkeit\" : \"Schnelligkeit\"},\r\n\t\t\t{ \"koordination\" : \"Koordination\"}\r\n\t\t]],\r\n\t[\"Kognitiv\", [\r\n\t\t\t{ \"orientierung\" : \"Orientierung, Entscheide\"}\r\n\t\t]],\r\n]);\r\n\r\nfunction File(){\r\n  var self = this;\r\n\r\n  self.fileData = ko.observable({\r\n    file: ko.observable(), // will be filled with a File object\r\n    // Read the files (all are optional, e.g: if you're certain that it is a text file, use only text:\r\n    binaryString: ko.observable(), // FileReader.readAsBinaryString(Blob|File) - The result property will contain the file/blob's data as a binary string. Every byte is represented by an integer in the range [0..255].\r\n    text: ko.observable(), // FileReader.readAsText(Blob|File, opt_encoding) - The result property will contain the file/blob's data as a text string. By default the string is decoded as 'UTF-8'. Use the optional encoding parameter can specify a different format.\r\n    dataURL: ko.observable(), // FileReader.readAsDataURL(Blob|File) - The result property will contain the file/blob's data encoded as a data URL.\r\n    arrayBuffer: ko.observable(), // FileReader.readAsArrayBuffer(Blob|File) - The result property will contain the file/blob's data as an ArrayBuffer object.\r\n\r\n    // a special observable (optional)\r\n    base64String: ko.observable(), // just the base64 string, without mime type or anything else\r\n\r\n    // a \"file types\" observable to denote acceptable file types (optional)\r\n    // accepts any string value that is valid for the `accept` attribute of a file input\r\n    // if provided, will override the `accept` attribute on the target file input\r\n    // if not provided, the value of the `accept` attribute will be used\r\n    fileTypes: ko.observable(),\r\n\r\n    onInvalidFileDrop: function(fileData) {\r\n      // do something with rejected file\r\n    },\r\n\r\n\r\n    // you can have observable arrays for each of the properties above, useful in multiple file upload selection (see Multiple file Uploads section below)\r\n    // in the format of xxxArray: ko.observableArray(),\r\n    /* e.g: */ fileArray: ko.observableArray(), base64StringArray: ko.observableArray(),\r\n  });\r\n\r\n  self.fileData().text.subscribe(function(text){\r\n    // do something\r\n  });\r\n\r\n  self.fileData().base64String.subscribe(function(base64String){\r\n    //sendToServer(base64String);\r\n    console.log(base64String);\r\n  });\r\n}\r\n\r\nfunction Variety(){\r\n  var self = this;\r\n\r\n  self.description = ko.observable();\r\n  self.image = ko.observable();\r\n};\r\n\r\nfunction Topic(){\r\n  var self = this;\r\n\r\n  self.selectedTopicIds = ko.observableArray();\r\n  self.selectedTopics = ko.computed(function() {\r\n    return ko.utils.arrayMap(self.selectedTopicIds(),\r\n    function(id) {\r\n      var index = id.split(\"-\");\r\n      var main = index[0];\r\n      var topic = topics.get(main)[index[1]][index[2]];\r\n      return main +' > '+ topic;\r\n    });\r\n  });\r\n};\r\n\r\nfunction Phase(){\r\n  var self = this;\r\n\r\n  self.selectedPhasesIds = ko.observableArray();\r\n  self.selectedPhases = ko.computed(function() {\r\n    return ko.utils.arrayMap(self.selectedPhasesIds(),\r\n    function(id) {\r\n      return phases.get(id);\r\n    });\r\n  });\r\n};\r\n\r\nfunction Exercise(){\r\n  var self = this;\r\n\r\n  self.phase = new Phase();\r\n  self.topic = new Topic();\r\n\r\n  self.title = ko.observable();\r\n  self.organisation = ko.observable();\r\n  self.procedure = ko.observable();\r\n  self.coaching = ko.observable();\r\n  self.image = new File();\r\n\r\n  self.isExtended = ko.observable(true);\r\n\r\n  self.varieties = ko.observableArray();\r\n  self.hasVarieties = ko.computed(function(){\r\n    return (self.varieties().length>0);\r\n  });\r\n  self.addVariety = function(){\r\n    self.varieties.push(new Variety());\r\n  };\r\n};\r\n\r\nfunction ExercirViewModel(){\r\n  var self = this;\r\n\r\n  self.exercise = new Exercise();\r\n\r\n  self.phases = Array.from(phases.values());\r\n  self.topics = ko.observableArray();\r\n  Array.from(topics.keys()).forEach(function(value){\r\n    var tpcs = Array.from(topics.get(value))\r\n                .map(function(topic){\r\n                  return { key: Object.keys(topic)[0],\r\n                           value: Object.values(topic)[0]};\r\n                });\r\n    self.topics.push({\r\n      main: value,\r\n      topics: tpcs});\r\n  });\r\n\r\n  self.save = function(){\r\n    console.log('save',self.exercise);\r\n  };\r\n};\r\n\r\nko.fileBindings.defaultOptions = {\r\n  wrapperClass: 'input-group',\r\n  fileNameClass: 'disabled form-control',\r\n  noFileText: 'No file chosen',\r\n  buttonGroupClass: 'input-group-append',\r\n  buttonClass: 'btn btn-secondary',\r\n  clearButtonClass: 'btn btn-warning',\r\n  buttonText: 'Choose File',\r\n  changeButtonText: 'Change',\r\n  clearButtonText: 'Clear',\r\n  fileName: true, // show the selected file name?\r\n  clearButton: true, // show clear button?\r\n  onClear: function(fileData, options) {\r\n      if (typeof fileData.clear === 'function') {\r\n          fileData.clear();\r\n      }\r\n  }\r\n};\r\n\r\n// change a default option\r\nko.fileBindings.defaultOptions.buttonText = 'Browse';\r\n\r\nko.applyBindings(new ExercirViewModel());\r\n"]}